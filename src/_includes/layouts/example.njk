{% extends "layouts/base.njk" %}

{% block content %}
<article>
  <h1>{{ title }}</h1>

  <div class="example-container">
    {{ content | safe }}
  </div>

  <div class="code-export">
    <button class="copy-code">Copy Code</button>

    {# 
      This hidden div holds the HTML, CSS, and JS metadata for generating the standalone export. 
      You can customize the data-css and data-js attributes per page.
    #}
    <div class="example" data-css='[]' data-js='[]' style="display:none;">
      {{ content | safe }}
    </div>
  </div>
</article>
{% endblock %}

{% block extrascript %}
<script>
  // Wait for the DOM to load before attaching logic
  document.addEventListener("DOMContentLoaded", () => {
    const button = document.querySelector(".copy-code");
    const example = document.querySelector(".example");

    if (!button || !example) return;

    button.addEventListener("click", () => {
      // Get raw HTML inside the hidden .example div
      const html = example.innerHTML.trim();

      // Extract optional external CSS and JS
      const css = JSON.parse(example.dataset.css || "[]");
      const js = JSON.parse(example.dataset.js || "[]");

      // Build a complete standalone HTML doc for copying
      const fullDoc = `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Example</title>
  ${css.map(href => `<link rel="stylesheet" href="${href}">`).join("\n")}
</head>
<body>
${html}
${js.map(src => `<script src="${src}"></script>`).join("\n")}
</body>
</html>`;

      // Copy the generated document to the clipboard
      navigator.clipboard.writeText(fullDoc).then(() => {
        button.textContent = "Copied!";
        setTimeout(() => (button.textContent = "Copy Code"), 1500);
      });
    });
  });
</script>
{% endblock %}
